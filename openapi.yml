openapi: 3.0.0

info:
  title: "smrak API"
  version: "v0.1.6"

paths:
  "/":
    get:
      responses:
        "200":
          description: "Health Check"
  "/openapi.yml":
    get:
      responses:
        "200":
          description: OpenAPI Schema (YAML format)
          content:
            text/plain:
              schema:
                type: string

  "/tags":
    get:
      responses:
        "200":
          description: "All tags in posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  "/categories":
    get:
      responses:
        "200":
          description: "All categories in posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  "/post/uuid/{uuid}":
    get:
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: "Get posts by uuid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  "/post/slug":
    get:
      parameters:
        - name: slug
          description: "Stem of filename"
          required: true
          in: query
          schema:
            type: string
        - name: lang
          in: query
          description: "Lang"
          schema:
            type: string
            default: ja
            enum:
              - ja
              - en
      responses:
        "200":
          description: "Get posts by slug and lang"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  "/posts":
    get:
      summary: get all posts
      parameters:
        - name: lang
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: order_by
          in: query
          schema:
            type: string
            enum:
              - update_at
              - created_at
      responses:
        "200":
          description: "All posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

  "/search":
    summary: "Search posts"
    description: "Search posts with tanitivy query language"
    get:
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: "Searched posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

components:
  schemas:
    Post:
      type: object
      properties:
        uuid:
          type: string
          example: "fabe88b5-a35e-4954-bfd8-b5e88c585e7a"
          required:
            - "true"
        slug:
          type: string
          example: "file_stem"
          required:
            - "true"
        title:
          type: string
          required:
            - "true"
        description:
          type: string
          required:
            - "true"
        category:
          type: string
          required:
            - "true"
        lang:
          type: string
          required:
            - "true"
          enum:
            - ja
            - en
        tags:
          type: array
          required:
            - "true"
          items:
            type: string
        body:
          type: string
          required:
            - "true"
        created_at:
          type: string
          required:
            - "true"
          format: date
        update_at:
          type: string
          required:
            - "true"
          format: date
